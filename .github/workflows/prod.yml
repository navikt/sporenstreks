name: Deploy til prod

on:
  push:
    tags:
      - prod/*
env:
  DOCKER_IMAGE_NAME: docker.pkg.github.com/${{ github.repository }}/sporenstreks
  LATEST_TAG: docker.pkg.github.com/${{ github.repository }}/sporenstreks:latest
  IMAGE: docker.pkg.github.com/${{ github.repository }}/sporenstreks:${{ github.sha }}

jobs:

  testAndbuild:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-

      - name: test and build
        run: bash ./gradlew --console=plain build test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} --tag ${LATEST_TAG} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${DOCKER_IMAGE_NAME}

  slowTest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-

      - name: compose up
        run: cd docker/local && docker-compose up -d && sleep 10
      - name: test and build
        run: bash ./gradlew --console=plain build slowTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}

  jacocoOgSonarCube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-

      - name: test and build
        run: bash ./gradlew --console=plain build jacocoTestReport sonarqube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}

    publishDockerImage:
      runs-on: ubuntu-latest
      needs: testAndbuild
      steps:
        - uses: actions/checkout@v1
        - uses: actions/setup-java@v1
          with:
            java-version: '11.x'
        - name: Cache Gradle wrapper
          uses: actions/cache@v2
          with:
            path: ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
            restore-keys: |
              ${{ runner.os }}-gradle-wrapper-
        - name: Cache Gradle packages
          uses: actions/cache@v2
          with:
            path: ~/.gradle/caches
            key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle') }}
            restore-keys: |
              ${{ runner.os }}-gradle-cache-
        - name: create docker tag
          env:
            DOCKER_IMAGE: docker.pkg.github.com/${{ github.repository }}/sporenstreks
          run: |
            echo $DOCKER_IMAGE > .docker_image
            echo $(echo $GITHUB_SHA | cut -c1-7) > .docker_tag
        - name: Build and publish Docker image
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            docker build --tag ${IMAGE} .
            docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
            docker push ${IMAGE}

  deploy:
    name: Deploy to PROD
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: deploy/prod.yaml
